<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhang.bruce.general.mysql.TblGptExchangeOrderMapper" >

    <resultMap id="BaseResultMap" type="com.zhang.bruce.easyexcel.TblGptExchangeOrder" >
        <result column="ID" property="id" jdbcType="BIGINT" />
        <result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
        <result column="BUSINESS_CODE" property="businessCode" jdbcType="VARCHAR" />
        <result column="SEQUENCE_ID" property="sequenceId" jdbcType="VARCHAR" />
        <result column="REQUEST_ID" property="requestId" jdbcType="VARCHAR" />
        <result column="MERCHANT_NO" property="merchantNo" jdbcType="VARCHAR" />
        <result column="SIGN_NAME" property="signName" jdbcType="VARCHAR" />
        <result column="SIGN_NAME_EN" property="signNameEn" jdbcType="VARCHAR" />
        <result column="MEMBER_ID" property="memberId" jdbcType="VARCHAR" />
        <result column="MERCHANT_KYC" property="merchantKyc" jdbcType="VARCHAR" />
        <result column="MERCHANT_KYC_SUB" property="merchantKycSub" jdbcType="VARCHAR" />
        <result column="IP_ADDRESS" property="ipAddress" jdbcType="VARCHAR" />
        <result column="IP_AREA" property="ipArea" jdbcType="VARCHAR" />
        <result column="IP_PROXY" property="ipProxy" jdbcType="VARCHAR" />
        <result column="CURRENCY" property="currency" jdbcType="VARCHAR" />
        <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
        <result column="CNY_AMOUNT" property="cnyAmount" jdbcType="DECIMAL" />
        <result column="TARGET_CURRENCY" property="targetCurrency" jdbcType="VARCHAR" />
        <result column="TARGET_AMOUNT" property="targetAmount" jdbcType="DECIMAL" />
        <result column="REMARK" property="remark" jdbcType="VARCHAR" />
        <result column="OCCUR_TIME" property="occurTime" jdbcType="TIMESTAMP" />
        <result column="COMPLETE_TIME" property="completeTime" jdbcType="TIMESTAMP" />
        <result column="BLACK_TM" property="blackTm" jdbcType="VARCHAR" />
        <result column="BLACK_RESULT" property="blackResult" jdbcType="LONGVARCHAR" />
        <result column="BLACK_RESULT_CODE" property="blackResultCode" jdbcType="VARCHAR" />
        <result column="WHITE_RESULT" property="whiteResult" jdbcType="VARCHAR" />
        <result column="TOTAL_TM" property="totalTm" jdbcType="VARCHAR" />
        <result column="RULE_TM" property="ruleTm" jdbcType="VARCHAR" />
        <result column="RULE_RESULT" property="ruleResult" jdbcType="LONGVARCHAR" />
        <result column="TRIGER_RULE" property="trigerRule" jdbcType="VARCHAR" />
        <result column="RULE_CODES" property="ruleCodes" jdbcType="VARCHAR" />
        <result column="SUPPORT_OPERATE_CODE" property="supportOperateCode" jdbcType="VARCHAR" />
        <result column="BLOCK_TYPE" property="blockType" jdbcType="VARCHAR" />
        <result column="ERROR_CODE" property="errorCode" jdbcType="VARCHAR" />
        <result column="ERROR_MSG" property="errorMsg" jdbcType="VARCHAR" />
        <result column="NOTIFY_STATUS" property="notifyStatus" jdbcType="VARCHAR" />
        <result column="NOTIFY_NUM" property="notifyNum" jdbcType="INTEGER" />
        <result column="NOTIFY_RESULT_CODE" property="notifyResultCode" jdbcType="VARCHAR" />
        <result column="NOTIFY_RESULT_MSG" property="notifyResultMsg" jdbcType="VARCHAR" />
        <result column="PAY_RESULT" property="payResult" jdbcType="VARCHAR" />
        <result column="GOODS_INFO" property="goodsInfo" jdbcType="LONGVARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        ID, PRODUCT_CODE, BUSINESS_CODE, SEQUENCE_ID, REQUEST_ID, MERCHANT_NO, SIGN_NAME,
        SIGN_NAME_EN, MEMBER_ID, MERCHANT_KYC, MERCHANT_KYC_SUB, IP_ADDRESS, IP_AREA, IP_PROXY,
        CURRENCY, AMOUNT, CNY_AMOUNT, TARGET_CURRENCY, TARGET_AMOUNT, REMARK, OCCUR_TIME,
        COMPLETE_TIME, BLACK_TM, BLACK_RESULT, BLACK_RESULT_CODE, WHITE_RESULT, TOTAL_TM,
        RULE_TM, RULE_RESULT, TRIGER_RULE, RULE_CODES, SUPPORT_OPERATE_CODE, BLOCK_TYPE,
        ERROR_CODE, ERROR_MSG, NOTIFY_STATUS, NOTIFY_NUM, NOTIFY_RESULT_CODE, NOTIFY_RESULT_MSG,
        PAY_RESULT, GOODS_INFO, CREATE_TIME, UPDATE_TIME
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhang.bruce.easyexcel.TblGptExchangeOrderExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from TBL_GPT_EXCHANGE_ORDER
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <delete id="deleteByExample" parameterType="com.zhang.bruce.easyexcel.TblGptExchangeOrderExample" >
        delete from TBL_GPT_EXCHANGE_ORDER
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.zhang.bruce.easyexcel.TblGptExchangeOrder" >
        insert into TBL_GPT_EXCHANGE_ORDER (ID, PRODUCT_CODE, BUSINESS_CODE,
            SEQUENCE_ID, REQUEST_ID, MERCHANT_NO,
            SIGN_NAME, SIGN_NAME_EN, MEMBER_ID,
            MERCHANT_KYC, MERCHANT_KYC_SUB, IP_ADDRESS,
            IP_AREA, IP_PROXY, CURRENCY,
            AMOUNT, CNY_AMOUNT, TARGET_CURRENCY,
            TARGET_AMOUNT, REMARK, OCCUR_TIME,
            COMPLETE_TIME, BLACK_TM, BLACK_RESULT,
            BLACK_RESULT_CODE, WHITE_RESULT, TOTAL_TM,
            RULE_TM, RULE_RESULT, TRIGER_RULE,
            RULE_CODES, SUPPORT_OPERATE_CODE, BLOCK_TYPE,
            ERROR_CODE, ERROR_MSG, NOTIFY_STATUS,
            NOTIFY_NUM, NOTIFY_RESULT_CODE, NOTIFY_RESULT_MSG,
            PAY_RESULT, GOODS_INFO, CREATE_TIME,
            UPDATE_TIME)
        values (#{id,jdbcType=BIGINT}, #{productCode,jdbcType=VARCHAR}, #{businessCode,jdbcType=VARCHAR},
            #{sequenceId,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}, #{merchantNo,jdbcType=VARCHAR},
            #{signName,jdbcType=VARCHAR}, #{signNameEn,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR},
            #{merchantKyc,jdbcType=VARCHAR}, #{merchantKycSub,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR},
            #{ipArea,jdbcType=VARCHAR}, #{ipProxy,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR},
            #{amount,jdbcType=DECIMAL}, #{cnyAmount,jdbcType=DECIMAL}, #{targetCurrency,jdbcType=VARCHAR},
            #{targetAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{occurTime,jdbcType=TIMESTAMP},
            #{completeTime,jdbcType=TIMESTAMP}, #{blackTm,jdbcType=VARCHAR}, #{blackResult,jdbcType=LONGVARCHAR},
            #{blackResultCode,jdbcType=VARCHAR}, #{whiteResult,jdbcType=VARCHAR}, #{totalTm,jdbcType=VARCHAR},
            #{ruleTm,jdbcType=VARCHAR}, #{ruleResult,jdbcType=LONGVARCHAR}, #{trigerRule,jdbcType=VARCHAR},
            #{ruleCodes,jdbcType=VARCHAR}, #{supportOperateCode,jdbcType=VARCHAR}, #{blockType,jdbcType=VARCHAR},
            #{errorCode,jdbcType=VARCHAR}, #{errorMsg,jdbcType=VARCHAR}, #{notifyStatus,jdbcType=VARCHAR},
            #{notifyNum,jdbcType=INTEGER}, #{notifyResultCode,jdbcType=VARCHAR}, #{notifyResultMsg,jdbcType=VARCHAR},
            #{payResult,jdbcType=VARCHAR}, #{goodsInfo,jdbcType=LONGVARCHAR}, #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.zhang.bruce.easyexcel.TblGptExchangeOrder" >
        insert into TBL_GPT_EXCHANGE_ORDER
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                ID,
            </if>
            <if test="productCode != null" >
                PRODUCT_CODE,
            </if>
            <if test="businessCode != null" >
                BUSINESS_CODE,
            </if>
            <if test="sequenceId != null" >
                SEQUENCE_ID,
            </if>
            <if test="requestId != null" >
                REQUEST_ID,
            </if>
            <if test="merchantNo != null" >
                MERCHANT_NO,
            </if>
            <if test="signName != null" >
                SIGN_NAME,
            </if>
            <if test="signNameEn != null" >
                SIGN_NAME_EN,
            </if>
            <if test="memberId != null" >
                MEMBER_ID,
            </if>
            <if test="merchantKyc != null" >
                MERCHANT_KYC,
            </if>
            <if test="merchantKycSub != null" >
                MERCHANT_KYC_SUB,
            </if>
            <if test="ipAddress != null" >
                IP_ADDRESS,
            </if>
            <if test="ipArea != null" >
                IP_AREA,
            </if>
            <if test="ipProxy != null" >
                IP_PROXY,
            </if>
            <if test="currency != null" >
                CURRENCY,
            </if>
            <if test="amount != null" >
                AMOUNT,
            </if>
            <if test="cnyAmount != null" >
                CNY_AMOUNT,
            </if>
            <if test="targetCurrency != null" >
                TARGET_CURRENCY,
            </if>
            <if test="targetAmount != null" >
                TARGET_AMOUNT,
            </if>
            <if test="remark != null" >
                REMARK,
            </if>
            <if test="occurTime != null" >
                OCCUR_TIME,
            </if>
            <if test="completeTime != null" >
                COMPLETE_TIME,
            </if>
            <if test="blackTm != null" >
                BLACK_TM,
            </if>
            <if test="blackResult != null" >
                BLACK_RESULT,
            </if>
            <if test="blackResultCode != null" >
                BLACK_RESULT_CODE,
            </if>
            <if test="whiteResult != null" >
                WHITE_RESULT,
            </if>
            <if test="totalTm != null" >
                TOTAL_TM,
            </if>
            <if test="ruleTm != null" >
                RULE_TM,
            </if>
            <if test="ruleResult != null" >
                RULE_RESULT,
            </if>
            <if test="trigerRule != null" >
                TRIGER_RULE,
            </if>
            <if test="ruleCodes != null" >
                RULE_CODES,
            </if>
            <if test="supportOperateCode != null" >
                SUPPORT_OPERATE_CODE,
            </if>
            <if test="blockType != null" >
                BLOCK_TYPE,
            </if>
            <if test="errorCode != null" >
                ERROR_CODE,
            </if>
            <if test="errorMsg != null" >
                ERROR_MSG,
            </if>
            <if test="notifyStatus != null" >
                NOTIFY_STATUS,
            </if>
            <if test="notifyNum != null" >
                NOTIFY_NUM,
            </if>
            <if test="notifyResultCode != null" >
                NOTIFY_RESULT_CODE,
            </if>
            <if test="notifyResultMsg != null" >
                NOTIFY_RESULT_MSG,
            </if>
            <if test="payResult != null" >
                PAY_RESULT,
            </if>
            <if test="goodsInfo != null" >
                GOODS_INFO,
            </if>
            <if test="createTime != null" >
                CREATE_TIME,
            </if>
            <if test="updateTime != null" >
                UPDATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="productCode != null" >
                #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="businessCode != null" >
                #{businessCode,jdbcType=VARCHAR},
            </if>
            <if test="sequenceId != null" >
                #{sequenceId,jdbcType=VARCHAR},
            </if>
            <if test="requestId != null" >
                #{requestId,jdbcType=VARCHAR},
            </if>
            <if test="merchantNo != null" >
                #{merchantNo,jdbcType=VARCHAR},
            </if>
            <if test="signName != null" >
                #{signName,jdbcType=VARCHAR},
            </if>
            <if test="signNameEn != null" >
                #{signNameEn,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null" >
                #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="merchantKyc != null" >
                #{merchantKyc,jdbcType=VARCHAR},
            </if>
            <if test="merchantKycSub != null" >
                #{merchantKycSub,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null" >
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="ipArea != null" >
                #{ipArea,jdbcType=VARCHAR},
            </if>
            <if test="ipProxy != null" >
                #{ipProxy,jdbcType=VARCHAR},
            </if>
            <if test="currency != null" >
                #{currency,jdbcType=VARCHAR},
            </if>
            <if test="amount != null" >
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="cnyAmount != null" >
                #{cnyAmount,jdbcType=DECIMAL},
            </if>
            <if test="targetCurrency != null" >
                #{targetCurrency,jdbcType=VARCHAR},
            </if>
            <if test="targetAmount != null" >
                #{targetAmount,jdbcType=DECIMAL},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="occurTime != null" >
                #{occurTime,jdbcType=TIMESTAMP},
            </if>
            <if test="completeTime != null" >
                #{completeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blackTm != null" >
                #{blackTm,jdbcType=VARCHAR},
            </if>
            <if test="blackResult != null" >
                #{blackResult,jdbcType=LONGVARCHAR},
            </if>
            <if test="blackResultCode != null" >
                #{blackResultCode,jdbcType=VARCHAR},
            </if>
            <if test="whiteResult != null" >
                #{whiteResult,jdbcType=VARCHAR},
            </if>
            <if test="totalTm != null" >
                #{totalTm,jdbcType=VARCHAR},
            </if>
            <if test="ruleTm != null" >
                #{ruleTm,jdbcType=VARCHAR},
            </if>
            <if test="ruleResult != null" >
                #{ruleResult,jdbcType=LONGVARCHAR},
            </if>
            <if test="trigerRule != null" >
                #{trigerRule,jdbcType=VARCHAR},
            </if>
            <if test="ruleCodes != null" >
                #{ruleCodes,jdbcType=VARCHAR},
            </if>
            <if test="supportOperateCode != null" >
                #{supportOperateCode,jdbcType=VARCHAR},
            </if>
            <if test="blockType != null" >
                #{blockType,jdbcType=VARCHAR},
            </if>
            <if test="errorCode != null" >
                #{errorCode,jdbcType=VARCHAR},
            </if>
            <if test="errorMsg != null" >
                #{errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="notifyStatus != null" >
                #{notifyStatus,jdbcType=VARCHAR},
            </if>
            <if test="notifyNum != null" >
                #{notifyNum,jdbcType=INTEGER},
            </if>
            <if test="notifyResultCode != null" >
                #{notifyResultCode,jdbcType=VARCHAR},
            </if>
            <if test="notifyResultMsg != null" >
                #{notifyResultMsg,jdbcType=VARCHAR},
            </if>
            <if test="payResult != null" >
                #{payResult,jdbcType=VARCHAR},
            </if>
            <if test="goodsInfo != null" >
                #{goodsInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.zhang.bruce.easyexcel.TblGptExchangeOrderExample" resultType="java.lang.Integer" >
        select count(*) from TBL_GPT_EXCHANGE_ORDER
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update TBL_GPT_EXCHANGE_ORDER
        <set >
            <if test="record.id != null" >
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.productCode != null" >
                PRODUCT_CODE = #{record.productCode,jdbcType=VARCHAR},
            </if>
            <if test="record.businessCode != null" >
                BUSINESS_CODE = #{record.businessCode,jdbcType=VARCHAR},
            </if>
            <if test="record.sequenceId != null" >
                SEQUENCE_ID = #{record.sequenceId,jdbcType=VARCHAR},
            </if>
            <if test="record.requestId != null" >
                REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantNo != null" >
                MERCHANT_NO = #{record.merchantNo,jdbcType=VARCHAR},
            </if>
            <if test="record.signName != null" >
                SIGN_NAME = #{record.signName,jdbcType=VARCHAR},
            </if>
            <if test="record.signNameEn != null" >
                SIGN_NAME_EN = #{record.signNameEn,jdbcType=VARCHAR},
            </if>
            <if test="record.memberId != null" >
                MEMBER_ID = #{record.memberId,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantKyc != null" >
                MERCHANT_KYC = #{record.merchantKyc,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantKycSub != null" >
                MERCHANT_KYC_SUB = #{record.merchantKycSub,jdbcType=VARCHAR},
            </if>
            <if test="record.ipAddress != null" >
                IP_ADDRESS = #{record.ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.ipArea != null" >
                IP_AREA = #{record.ipArea,jdbcType=VARCHAR},
            </if>
            <if test="record.ipProxy != null" >
                IP_PROXY = #{record.ipProxy,jdbcType=VARCHAR},
            </if>
            <if test="record.currency != null" >
                CURRENCY = #{record.currency,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null" >
                AMOUNT = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.cnyAmount != null" >
                CNY_AMOUNT = #{record.cnyAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.targetCurrency != null" >
                TARGET_CURRENCY = #{record.targetCurrency,jdbcType=VARCHAR},
            </if>
            <if test="record.targetAmount != null" >
                TARGET_AMOUNT = #{record.targetAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.remark != null" >
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.occurTime != null" >
                OCCUR_TIME = #{record.occurTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.completeTime != null" >
                COMPLETE_TIME = #{record.completeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.blackTm != null" >
                BLACK_TM = #{record.blackTm,jdbcType=VARCHAR},
            </if>
            <if test="record.blackResult != null" >
                BLACK_RESULT = #{record.blackResult,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.blackResultCode != null" >
                BLACK_RESULT_CODE = #{record.blackResultCode,jdbcType=VARCHAR},
            </if>
            <if test="record.whiteResult != null" >
                WHITE_RESULT = #{record.whiteResult,jdbcType=VARCHAR},
            </if>
            <if test="record.totalTm != null" >
                TOTAL_TM = #{record.totalTm,jdbcType=VARCHAR},
            </if>
            <if test="record.ruleTm != null" >
                RULE_TM = #{record.ruleTm,jdbcType=VARCHAR},
            </if>
            <if test="record.ruleResult != null" >
                RULE_RESULT = #{record.ruleResult,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.trigerRule != null" >
                TRIGER_RULE = #{record.trigerRule,jdbcType=VARCHAR},
            </if>
            <if test="record.ruleCodes != null" >
                RULE_CODES = #{record.ruleCodes,jdbcType=VARCHAR},
            </if>
            <if test="record.supportOperateCode != null" >
                SUPPORT_OPERATE_CODE = #{record.supportOperateCode,jdbcType=VARCHAR},
            </if>
            <if test="record.blockType != null" >
                BLOCK_TYPE = #{record.blockType,jdbcType=VARCHAR},
            </if>
            <if test="record.errorCode != null" >
                ERROR_CODE = #{record.errorCode,jdbcType=VARCHAR},
            </if>
            <if test="record.errorMsg != null" >
                ERROR_MSG = #{record.errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="record.notifyStatus != null" >
                NOTIFY_STATUS = #{record.notifyStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.notifyNum != null" >
                NOTIFY_NUM = #{record.notifyNum,jdbcType=INTEGER},
            </if>
            <if test="record.notifyResultCode != null" >
                NOTIFY_RESULT_CODE = #{record.notifyResultCode,jdbcType=VARCHAR},
            </if>
            <if test="record.notifyResultMsg != null" >
                NOTIFY_RESULT_MSG = #{record.notifyResultMsg,jdbcType=VARCHAR},
            </if>
            <if test="record.payResult != null" >
                PAY_RESULT = #{record.payResult,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsInfo != null" >
                GOODS_INFO = #{record.goodsInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.createTime != null" >
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update TBL_GPT_EXCHANGE_ORDER
        set ID = #{record.id,jdbcType=BIGINT},
            PRODUCT_CODE = #{record.productCode,jdbcType=VARCHAR},
            BUSINESS_CODE = #{record.businessCode,jdbcType=VARCHAR},
            SEQUENCE_ID = #{record.sequenceId,jdbcType=VARCHAR},
            REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
            MERCHANT_NO = #{record.merchantNo,jdbcType=VARCHAR},
            SIGN_NAME = #{record.signName,jdbcType=VARCHAR},
            SIGN_NAME_EN = #{record.signNameEn,jdbcType=VARCHAR},
            MEMBER_ID = #{record.memberId,jdbcType=VARCHAR},
            MERCHANT_KYC = #{record.merchantKyc,jdbcType=VARCHAR},
            MERCHANT_KYC_SUB = #{record.merchantKycSub,jdbcType=VARCHAR},
            IP_ADDRESS = #{record.ipAddress,jdbcType=VARCHAR},
            IP_AREA = #{record.ipArea,jdbcType=VARCHAR},
            IP_PROXY = #{record.ipProxy,jdbcType=VARCHAR},
            CURRENCY = #{record.currency,jdbcType=VARCHAR},
            AMOUNT = #{record.amount,jdbcType=DECIMAL},
            CNY_AMOUNT = #{record.cnyAmount,jdbcType=DECIMAL},
            TARGET_CURRENCY = #{record.targetCurrency,jdbcType=VARCHAR},
            TARGET_AMOUNT = #{record.targetAmount,jdbcType=DECIMAL},
            REMARK = #{record.remark,jdbcType=VARCHAR},
            OCCUR_TIME = #{record.occurTime,jdbcType=TIMESTAMP},
            COMPLETE_TIME = #{record.completeTime,jdbcType=TIMESTAMP},
            BLACK_TM = #{record.blackTm,jdbcType=VARCHAR},
            BLACK_RESULT = #{record.blackResult,jdbcType=LONGVARCHAR},
            BLACK_RESULT_CODE = #{record.blackResultCode,jdbcType=VARCHAR},
            WHITE_RESULT = #{record.whiteResult,jdbcType=VARCHAR},
            TOTAL_TM = #{record.totalTm,jdbcType=VARCHAR},
            RULE_TM = #{record.ruleTm,jdbcType=VARCHAR},
            RULE_RESULT = #{record.ruleResult,jdbcType=LONGVARCHAR},
            TRIGER_RULE = #{record.trigerRule,jdbcType=VARCHAR},
            RULE_CODES = #{record.ruleCodes,jdbcType=VARCHAR},
            SUPPORT_OPERATE_CODE = #{record.supportOperateCode,jdbcType=VARCHAR},
            BLOCK_TYPE = #{record.blockType,jdbcType=VARCHAR},
            ERROR_CODE = #{record.errorCode,jdbcType=VARCHAR},
            ERROR_MSG = #{record.errorMsg,jdbcType=VARCHAR},
            NOTIFY_STATUS = #{record.notifyStatus,jdbcType=VARCHAR},
            NOTIFY_NUM = #{record.notifyNum,jdbcType=INTEGER},
            NOTIFY_RESULT_CODE = #{record.notifyResultCode,jdbcType=VARCHAR},
            NOTIFY_RESULT_MSG = #{record.notifyResultMsg,jdbcType=VARCHAR},
            PAY_RESULT = #{record.payResult,jdbcType=VARCHAR},
            GOODS_INFO = #{record.goodsInfo,jdbcType=LONGVARCHAR},
            CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
</mapper>
